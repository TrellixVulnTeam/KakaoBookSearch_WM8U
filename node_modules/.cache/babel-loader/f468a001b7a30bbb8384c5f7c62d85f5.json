{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const getWebList = createAsyncThunk(\"Web/GET_LIST\", async (payload, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n  let result = null;\n\n  try {\n    const apiUrl = 'https://dapi.kakao.com//v2/search/web';\n    result = await axios.get(apiUrl, {\n      params: {\n        query: payload\n      },\n      headers: {\n        Authorization: 'KakaoAK 7e837ff4cb969b61e048fc4f393dfc9c'\n      }\n    });\n  } catch (err) {\n    result = rejectWithValue(err.response);\n  }\n\n  return result;\n});\nexport const WebSlice = createSlice({\n  name: 'web',\n  initialState: {\n    rt: null,\n    //HTTP 상태 코드 (200, 404, 500등)\n    rtmsg: null,\n    //에러메시지\n    item: [],\n    //ajax 처리를 통해 수신된 데이터\n    loading: false\n  },\n  reducers: {},\n  extraReducers: {\n    [getWebList.pending]: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      return { ...state,\n        loading: true\n      };\n    },\n    [getWebList.fulfilled]: (state, _ref3) => {\n      let {\n        payload\n      } = _ref3;\n      return { ...state,\n        rt: payload.status,\n        rtmsg: payload.statusText,\n        item: payload.data,\n        loading: false\n      };\n    },\n    [getWebList.rejected]: (state, _ref4) => {\n      let {\n        payload\n      } = _ref4;\n      return { ...state,\n        rt: payload !== null && payload !== void 0 && payload.status ? payload.status : '500',\n        rtmsg: payload !== null && payload !== void 0 && payload.statusText ? payload.statusText : 'Server Error',\n        item: payload.data,\n        loading: false\n      };\n    }\n  }\n});","map":{"version":3,"sources":["/Users/Heejae/react_ex/13-kakao-search/src/slices/WebSlice.js"],"names":["createSlice","createAsyncThunk","axios","getWebList","payload","rejectWithValue","result","apiUrl","get","params","query","headers","Authorization","err","response","WebSlice","name","initialState","rt","rtmsg","item","loading","reducers","extraReducers","pending","state","fulfilled","status","statusText","data","rejected"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,UAAU,GAAGF,gBAAgB,CAAC,cAAD,EAAiB,OAAOG,OAAP,WAAwC;AAAA,MAAxB;AAAEC,IAAAA;AAAF,GAAwB;AAC/F,MAAIC,MAAM,GAAG,IAAb;;AAEA,MAAI;AACA,UAAMC,MAAM,GAAG,uCAAf;AACAD,IAAAA,MAAM,GAAG,MAAMJ,KAAK,CAACM,GAAN,CAAUD,MAAV,EAAkB;AAC7BE,MAAAA,MAAM,EAAE;AAACC,QAAAA,KAAK,EAAEN;AAAR,OADqB;AAE7BO,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAE;AAAhB;AAFoB,KAAlB,CAAf;AAIH,GAND,CAME,OAAOC,GAAP,EAAY;AACVP,IAAAA,MAAM,GAAGD,eAAe,CAACQ,GAAG,CAACC,QAAL,CAAxB;AACH;;AACD,SAAOR,MAAP;AACH,CAbyC,CAAnC;AAeP,OAAO,MAAMS,QAAQ,GAAGf,WAAW,CAAC;AAChCgB,EAAAA,IAAI,EAAE,KAD0B;AAEhCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,EAAE,EAAE,IADM;AACE;AACZC,IAAAA,KAAK,EAAE,IAFG;AAEG;AACbC,IAAAA,IAAI,EAAE,EAHI;AAGA;AACVC,IAAAA,OAAO,EAAE;AAJC,GAFkB;AAQhCC,EAAAA,QAAQ,EAAE,EARsB;AAUhCC,EAAAA,aAAa,EAAE;AACX,KAACpB,UAAU,CAACqB,OAAZ,GAAsB,CAACC,KAAD,YAAsB;AAAA,UAAd;AAACrB,QAAAA;AAAD,OAAc;AACxC,aAAO,EAAC,GAAGqB,KAAJ;AAAWJ,QAAAA,OAAO,EAAE;AAApB,OAAP;AACH,KAHU;AAIX,KAAClB,UAAU,CAACuB,SAAZ,GAAwB,CAACD,KAAD,YAAsB;AAAA,UAAd;AAACrB,QAAAA;AAAD,OAAc;AAC1C,aAAO,EACH,GAAGqB,KADA;AAEHP,QAAAA,EAAE,EAAEd,OAAO,CAACuB,MAFT;AAGHR,QAAAA,KAAK,EAAEf,OAAO,CAACwB,UAHZ;AAIHR,QAAAA,IAAI,EAAEhB,OAAO,CAACyB,IAJX;AAKHR,QAAAA,OAAO,EAAE;AALN,OAAP;AAOH,KAZU;AAaX,KAAClB,UAAU,CAAC2B,QAAZ,GAAuB,CAACL,KAAD,YAAsB;AAAA,UAAd;AAACrB,QAAAA;AAAD,OAAc;AACzC,aAAO,EACH,GAAGqB,KADA;AAEHP,QAAAA,EAAE,EAAEd,OAAO,SAAP,IAAAA,OAAO,WAAP,IAAAA,OAAO,CAAEuB,MAAT,GAAkBvB,OAAO,CAACuB,MAA1B,GAAkC,KAFnC;AAGHR,QAAAA,KAAK,EAAEf,OAAO,SAAP,IAAAA,OAAO,WAAP,IAAAA,OAAO,CAAEwB,UAAT,GAAsBxB,OAAO,CAACwB,UAA9B,GAA0C,cAH9C;AAIHR,QAAAA,IAAI,EAAEhB,OAAO,CAACyB,IAJX;AAKHR,QAAAA,OAAO,EAAE;AALN,OAAP;AAOH;AArBU;AAViB,CAAD,CAA5B","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport const getWebList = createAsyncThunk(\"Web/GET_LIST\", async (payload, { rejectWithValue }) => {\n    let result = null;\n\n    try {\n        const apiUrl = 'https://dapi.kakao.com//v2/search/web';\n        result = await axios.get(apiUrl, {\n            params: {query: payload},\n            headers: {Authorization: 'KakaoAK 7e837ff4cb969b61e048fc4f393dfc9c'}\n        });\n    } catch (err) {\n        result = rejectWithValue(err.response);\n    }\n    return result;\n});\n\nexport const WebSlice = createSlice({\n    name: 'web',\n    initialState: {\n        rt: null,   //HTTP 상태 코드 (200, 404, 500등)\n        rtmsg: null, //에러메시지\n        item: [], //ajax 처리를 통해 수신된 데이터\n        loading: false,\n    },\n    reducers: {},\n\n    extraReducers: {\n        [getWebList.pending]: (state, {payload}) => {\n            return {...state, loading: true};\n        },\n        [getWebList.fulfilled]: (state, {payload}) => {\n            return {\n                ...state,\n                rt: payload.status,\n                rtmsg: payload.statusText,\n                item: payload.data,\n                loading: false\n            }\n        },\n        [getWebList.rejected]: (state, {payload}) => {\n            return {\n                ...state,\n                rt: payload?.status ? payload.status: '500',\n                rtmsg: payload?.statusText ? payload.statusText: 'Server Error',\n                item: payload.data,\n                loading: false\n            }\n        }\n    }\n});"]},"metadata":{},"sourceType":"module"}